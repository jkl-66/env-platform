version: '3.8'

services:
  # 气候数据分析应用
  climate_app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: climate_app
    environment:
      # 数据库配置
      # 注意：此服务现在将尝试连接到您本地的MySQL服务
      MYSQL_HOST: host.docker.internal # 对于Windows/Mac上的Docker Desktop，这会解析为主机IP
      MYSQL_PORT: 3306
      MYSQL_DB: climate_metadata
      MYSQL_USER: mysql_user
      MYSQL_PASSWORD: mysql_password
      
      # 应用配置
      DEBUG: "false"
      HOST: "0.0.0.0"
      PORT: 8000
      
      # API密钥（需要在.env文件中设置）
      NOAA_API_KEY: ${NOAA_API_KEY}
      ECMWF_API_KEY: ${ECMWF_API_KEY}
      
      # 安全配置
      SECRET_KEY: ${SECRET_KEY:-climate_secret_key_change_in_production}
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - climate_network

    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# 网络配置
networks:
  climate_network:
    driver: bridge